// Initialize audio context and related variables
let audioContext, analyser, meydaAnalyzer, microphone, timerInterval, recordingSeconds = 0;

// Cache DOM elements
const progressBar = document.getElementById("analysis-progress");
const rmsDisplay = document.getElementById("rms");
const centroidDisplay = document.getElementById("centroid");

// Start recording audio
function startRecording() {
    // Check if audio context is already initialized
    if (!audioContext) {
        audioContext = new (window.AudioContext || window.webkitAudioContext)();
    }
    // Get microphone input
    navigator.mediaDevices.getUserMedia({ audio: true }).then(stream => {
        microphone = audioContext.createMediaStreamSource(stream);
        analyser = audioContext.createAnalyser();
        microphone.connect(analyser);
        // Initialize Meyda analyzer
        meydaAnalyzer = Meyda.createMeydaAnalyzer({
            audioContext: audioContext,
            source: microphone,
            bufferSize: 512,
            featureExtractors: ["rms", "spectralCentroid"],
            callback: updateAudioAnalysis
        });
        meydaAnalyzer.start();
    }).catch(err => {
        console.error('Error accessing microphone:', err);
    });
}

// Stop recording audio
function stopRecording() {
    if (meydaAnalyzer) {
        meydaAnalyzer.stop();
    }
    if (microphone) {
        microphone.disconnect();
    }
    if (audioContext) {
        audioContext.close();
        audioContext = null;
    }
    clearInterval(timerInterval);
}

// Update audio analysis results
function updateAudioAnalysis(features) {
    if (features) {
        rmsDisplay.textContent = features.rms.toFixed(2);
        centroidDisplay.textContent = features.spectralCentroid.toFixed(2);
    }
}

// Update progress bar
function updateProgressBar() {
    recordingSeconds += 1;
    progressBar.style.width = `${(recordingSeconds / 60) * 100}%`;
}

// Initialize event listeners for UI controls
document.getElementById("recordButton").addEventListener("click", () => {
    startRecording();
    timerInterval = setInterval(updateProgressBar, 1000);
});
document.getElementById("stopButton").addEventListener("click", stopRecording);
